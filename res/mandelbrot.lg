void mem_set(float address, float value) __vm__
	 arg 1
	 arg 0
	 mem_set
	 push 0
	 ret
__endvm__

void initDisplay(){
	float displayAddr;
	displayAddr = 1030;
	
	mem_set(displayAddr + 1, 800);
	mem_set(displayAddr + 2, 600);
	mem_set(displayAddr + 0, 0);
	
}
void drawDisplay(float x, float y, float r, float g, float b){
	float displayAddr;
	displayAddr = 1030;
	
	mem_set(displayAddr + 1, x);
	mem_set(displayAddr + 2, y);
	mem_set(displayAddr + 3, r);
	mem_set(displayAddr + 4, g);
	mem_set(displayAddr + 5, b);
	mem_set(displayAddr + 0, 1);
	
}

void fillMandelbrot(float x, float y){
	
	if(y == 599)
		if(x == 799)
			return;
			
	if(x == 800) {
		fillMandelbrot(0, y+1);
		return;
	}
	else{
		drawMandelbrot(x,y);
		fillMandelbrot(x + 1, y);
	}
}

void drawMandelbrot(float x ,float y){
	float px;
	float py;
	float iter;
	px = (x - 400)/300 - 0.5;
	py = (y - 300)/300;
	iter = calcMandelbrot(px,py,px,py,0);
	
	if(iter > 90)
		drawDisplay(x,y,0,0,0);
	else {
		float c;
		c = 1 - iter/90;
		drawDisplay(x,y,c,c,c);
	}
}

float calcMandelbrot(float x ,float y, float px, float py, float iter){
	if(x*x+y*y > 4)
		return 0;
	if(iter == 100)
		return 0;
	
	float nx;
	float ny;
	
	nx = x*x - y*y + px;
	ny = 2*x*y + py;
	return 1 + calcMandelbrot(nx, ny, px,py,iter + 1);
}



void main(){
	initDisplay();
	
	fillMandelbrot(0,0);
	
}